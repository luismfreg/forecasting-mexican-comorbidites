# -*- coding: utf-8 -*-
"""Timeseries final project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ocJlFpZN1yTNIsYdXxI0E3ohWQoNcYte

#Time Serial Analysis to determine the annual incidences of diseases in Mexico from 2016 to 2019 and forecasting from 2020 to 2023

##Introduction
In 2000 industry leaders developed a freely available data mining model called CRoss-Industry Standard Process for Data Mining (crisp-dm).
This model aims to improve best practices and provides an organized structure for faster and better data mining results.[1]
CRISP-DM organizes the data mining process in six phases:
* Business understanding: Understand the problem to solve and how the solution generate revenues to the business
* Data understanding: Know the available data, what can be mining from them or which was their original purpose and how to adapt it to the new purpose
* Data preparation: Implies all the transformations done to the raw data to became it worthwhile for the models
* Modeling: All the models conducted to respond and make a solution for the problem
* Evaluation: Evaluate qualitative and quantitative the performance and accuracy of the model.
* Deployment: Present the possible revenues that the model offers, and if it is possible, check if this estimation at least is equal to the true considering profitable or is lower interpreting an inefficient 


Key Words:data analytics, data mining, time series, crisp-dm, clustering, prophet, forecasting

##Business Understanding
The World Health Organization (WHO) promotes the recommendation that countries should invest at least between 6% and 8% of their gross domestic product (GDP) in public spending on health. According to the OECD, member countries spend on average 5.7% of public spending, reaching a level higher than 8% in France (8.8), the USA (8.5), and Germany (8.1)[2,3]. On average, the Mexican State has allocated around 3% of GDP as public spending on health. 

The federal general budget approved for the Health function in Mexico was 653 thousand 443.15 million pesos (MMDP) for 2020, representing an increase of 4.35% compared to the one approved in 2019.[4] Therefore, the approved expenditure for this function was equivalent to 2.49% of GDP. Finally, according to CONAMED, 39% of family spending is spent on medicines.

Due to this lack of budget, it is helpful to analyze the morbidities that most affect the Mexican population and allocate the budget to reduce their incidence, if possible, even to avoid them. Thus, to increase the quality of life of Mexicans and avoid wasting resources in trying to cure preventing diseases.Furthermore, to allow the generation of policies that will enable a reorganization of public spending for non-preventable conditions and reduce the family spending of Mexicans for medicines and care that the state can not provide.

##Data Understanding
The Epidemiological Bulletin, National Epidemiological Surveillance System, is the official media of disseminating morbidity of the National Epidemiological Surveillance System (SINAVE).

This document has been published since 1880 and fulfills the function of disseminating new cases of 146 diseases subject to weekly or annual surveillance by sex, age group, and state [5].

Five bulletins were retrived from the SINAVE, those that corresponde to each year form 2016 to 2019 in pdf format and convert to csv file to retrived the data [8].
Every bulletin is composed of fourteen columns. These are the name of the diseases, the code for identifying them, the total count of incidences in the year, and one column for each month with the monthly incidences. The rows are the counts of each disease, and their number is variable since the relevant causes of morbidity change across the time adding or deleting rows. Likewise, the name and the listed order can change between years.
"""

#First Install Packages
# https://stackoverflow.com/questions/34940808/hierarchical-clustering-of-time-series-in-python-scipy-numpy-pandas
!pip3 install seaborn==0.9.0
import numpy as np
import seaborn as sns
import pandas as pd
from scipy import stats
import scipy.cluster.hierarchy as hac
import matplotlib.pyplot as plt
import statsmodels.api as sm
from fbprophet import Prophet
plt.style.use('bmh')
from fbprophet.diagnostics import cross_validation
from fbprophet.diagnostics import performance_metrics

"""##Data Prepatation
Then the five datasets are merged in one database, for this was required some steps. 

First, each dataset must contain homogenized data to join them. The diseases are sorted in the same row for each list to make them homogeneous. If they are in another position, they are moved to the correct place. Likewise, if the disease does not exist in a previous year, a lower value is input to this year. 

Suppose they have a similar but not equal name, the name changes to the latest one, which can only be applied when the code is the same. Finally, if the disease does not exist more in the recent data, this row is discarded.

Once the information is joinable, it is merged in adjacent columns to generate the time series for each row and overwrite the heads to assign the correct format to detect as dates in python.

After reading the complete file with the five years, it seems that it has two empty rows, dropping with the null command. After it, the code column, since it is not helpful for the model, was removed. At the final, the disease column became the index. 

To present the data since it is numeric, but the diseases are in the index, the transpose matrix generates the data's description to estimate the mean, standard deviation, and other parameters. These incidences for each disease are monthly since each row represents the count of a month.
"""

#Read data
data=pd.read_csv("diseases.csv")
data

#Database has the name of the diseases and the code, 
#the code is not relevant so is dropped 
diseases=data.drop(columns = 'code')
#Then rows with null values are eliminate 
diseases = diseases[~diseases.disease.isnull()].copy()
#Display the average incidence by month for each disease
diseases=diseases.set_index('disease')
diseases.T.describe()

"""After the first exploratory analysis of the data, since the database has 146 diseases to reduce and select relevant conditions, they were clustered with linkage applying ward method and Euclidean distance.  Diseases with less than 50 incidences in the first month of the last year are discarded to avoid null or infinite values and then plot them to visualize data and check their behavior."""

#The clusters estimate differences between them with the euclidian distance, 
#distances between months need to be significant to avoid null  or infinite 
#values, so diseases with less than 50 incidences in the first month of the
#last year are discarded
diseases = diseases[diseases['01/12/2019'] > 50]
diseases

"""##Modeling
Next, a brief explanation of the methodology is present. The first model is the clustering of the database to found common patterns in the time series. Two main strategies apply to suggest the optimal number of clusters. A dendrogram is plotted to indicate as the first approach the number of groups then is corrected, generating the most number of sets with more than one disease to be helpful. After creating the clusters, select the most important of them to model with the time series analysis to extract the seasonality and the trend to develop the forecasting of each disease in the selected clusters.
"""

ax = None
    # seaborn is used to plot the data to check the behaviour across the time
    # tsplot function only exist in seaborn 9 after it was depracated
ax = sns.tsplot(ax=ax, data=diseases.values, err_style="unit_traces")

# Clustering with Linkage method Ward
Z = hac.linkage(diseases, method='ward', metric='euclidean')

# Plot dendogram
plt.figure(figsize=(25, 10))
plt.title('Hierarchical Clustering Dendrogram')
plt.xlabel('Disease')
plt.ylabel('Incidence')
hac.dendrogram(
    Z,
    leaf_rotation=90.,  # rotates the x axis labels
    leaf_font_size=8.,  # font size for the x axis labels
    labels=diseases.index
)
plt.show()

"""The first plot and the dendrogram suggest that the optimal number of clusters is around seven, trying to avoid that one collection will contain most of the diseases, shown in the plot as a solid blue line at the bottom. On the other hand, respiratory infections, because of the high incidence and seasonality in winter, cannot be allocated with other diseases in a cluster."""

# Function for printing the distribution of elements in clusters and plotting together the clusters of time series

from scipy.cluster.hierarchy import fcluster

def print_clusters(timeSeries, Z, k, plot=False):
    # k Number of clusters to extract
    results = fcluster(Z, k, criterion='maxclust')
    print(results)

    # check the results
    s = pd.Series(results)
    clusters = s.unique()

    for c in clusters:
        cluster_indeces = s[s==c].index
        print("Cluster %d number of entries %d" % (c, len(cluster_indeces)))
        if plot:
            timeSeries.T.iloc[:,cluster_indeces].plot()
        plt.show()

# Call the function
print_clusters(diseases, Z,5, plot=True)

"""After suggesting the optimal number of clusters, plot each cluster. As is shown in the dendrogram, respiratory infection incidence is in its cluster isolated. Contrarily seven clusters are not an optimal number since it group three clusters with only one condition. Hence, the following strategy is to increase the number of clusters to split more the data and group them in another way, even though the data is divided and creates more unique clusters. Therefore the number of clusters is reduced to five, in which cluster two has 88% of data with 82 entries, making it impossible to analyze. Once again the cluster five is a unique cluster with only the respiratory infections incidence. Cluster four has the three most common conditions, conjunctivitis, mouth problems, and gastritis. Although they can be prevent required more effort because they are related to environmental pollution, stress, lifestyle, and harmful health behaviors. Cluster one has two diseases associated with the seasonality, both prevalent in summer with high temperatures. Finally, cluster three has five conditions strongly related and relevant for public health. They are comorbidities and joined are called metabolic syndrome (diabetes, obesity, and hypertension) plus two complications: Vulvovaginitis and otitis. Therefore the cluster three is selected to analyzed and generate the forecasting of their diseases. Otitis, since it is a complication of hypertension but is not exclusive, condition is discarded. Vulvovaginitis is keeping, according to Ventolini, G [6], obesity is strongly correlated, and it is also a relevant problem."""

#Selecting data for the most relevant cluster which is the metabolic syndrome 
#and adjusted to generate the forcasting with facebook prophet.
diabetes = diseases.loc['Diabetes mellitus Tipo II']
obesity = diseases.loc['Obesidad']
hypertension = diseases.loc['Hipertensión arterial']
vulvovaginitis = diseases.loc['Vulvovaginitis']
#New Data frame with 4 diseases as columns and 48 dates as rows
metabolic_sydrome = pd.DataFrame({'diabetes':diabetes, 'obesity': obesity,
                                    'hypertension':hypertension, 'vulvovaginitis':vulvovaginitis})
metabolic_sydrome = metabolic_sydrome.reset_index()
metabolic_sydrome.rename(columns={'index': 'date'}, inplace=True)
metabolic_sydrome['date']=pd.to_datetime(metabolic_sydrome.date,dayfirst=True)
metabolic_sydrome

#Plot of the data frame
plt.figure(figsize=(20, 8))
plt.plot(metabolic_sydrome.date, metabolic_sydrome.diabetes, label = 'diabetes')
plt.plot(metabolic_sydrome.date, metabolic_sydrome.hypertension, label = 'hypertension')
plt.plot(metabolic_sydrome.date, metabolic_sydrome.obesity, label = 'obesity')
plt.plot(metabolic_sydrome.date, metabolic_sydrome.vulvovaginitis, label = 'vulvovaginitis')
plt.xlabel('Check_up Date'); plt.ylabel('Incidence'); plt.title('Incidence of Metabolic Syndrome');
plt.legend()

#Ploting the decomposition of the time series of each disease to find
#the sesonality and trend of the incidence
#Diabetes
y_diabetes =metabolic_sydrome[['date','diabetes']]
diabetes_f= y_diabetes
y_diabetes=y_diabetes.set_index('date')
y_diabetes = y_diabetes.resample('MS').mean()
from pylab import rcParams
print("Decomposition Diabetes ")
rcParams['figure.figsize'] = 18, 8
decomposition = sm.tsa.seasonal_decompose(y_diabetes, model='additive')
fig = decomposition.plot()
plt.show()

#Obesity
y_obesity =metabolic_sydrome[['date','obesity']]
obesity_f= y_obesity
y_obesity=y_obesity.set_index('date')
y_obesity = y_obesity.resample('MS').mean()
from pylab import rcParams
print("Decomposition Obesity")
rcParams['figure.figsize'] = 18, 8
decomposition = sm.tsa.seasonal_decompose(y_obesity, model='additive')
fig = decomposition.plot()
plt.show()

#Hypertension
y_hypertension =metabolic_sydrome[['date','hypertension']]
hypertension_f= y_hypertension
y_hypertension=y_hypertension.set_index('date')
y_hypertension = y_hypertension.resample('MS').mean()
from pylab import rcParams
print("Decomposition Hypertension")
rcParams['figure.figsize'] = 18, 8
decomposition = sm.tsa.seasonal_decompose(y_hypertension, model='additive')
fig = decomposition.plot()
plt.show()

#vulvovaginitis
y_vulvovaginitis =metabolic_sydrome[['date','vulvovaginitis']]
vulvovaginitis_f= y_vulvovaginitis
y_vulvovaginitis=y_vulvovaginitis.set_index('date')
y_vulvovaginitis = y_vulvovaginitis.resample('MS').mean()
from pylab import rcParams
print("Decomposition Vulvovaginitis")
rcParams['figure.figsize'] = 18, 8
decomposition = sm.tsa.seasonal_decompose(y_vulvovaginitis, model='additive')
fig = decomposition.plot()
plt.show()

"""After selecting the cluster, it is plotted to search if exist a notorious behavior to analyze. The plot reveals that it has a trend and a pattern, the trend, as was expected, increases over time and not only for the population growth but also because the number of new cases each year increases. The pattern is not clear but seems to be annual since the last month reduces the number of incidences, and in the first months, it raises to their maximum, visualized as peaks. Decomposition of the time series is conducted to analyze and show the trend and pattern (seasonality) in a better way, splitting them from the original data. The actual data(observed), the trend, the seasonality, and the residuals are plotted for each disease from the decomposition. Related to the shift, which will be graphed together after with Facebook prophet, two trending pairs exist obesity with vulvovaginitis and diabetes with hypertension. The fourth conditions have similarities merging them in the same cluster for the seasonality and their residuals. In the four cases, an annual decrease in December and an annual peak in January will cause a failure in the forecasting since the peak appears as part of the residual and not of the seasonality. The Christmas holidays explained those peaks since most of the people in Mexico celebrate Christmas and forget to go to the doctor for their check-ups. As the incidence is counting with visits to the doctor, it explains the decrease. The peaks have the exact cause, but with an inverse effect due to the holidays and their customs, the illness people without a diagnosis go to the doctors decompensated from their chronic pathologies representing the new cases in the peaks.  """

#Modeling data for forecasting
diabetes_f = diabetes_f.rename(columns={'date': 'ds', 'diabetes': 'y'})
diabetes_model = Prophet(interval_width=0.95)
diabetes_model.fit(diabetes_f)

obesity_f = obesity_f.rename(columns={'date': 'ds', 'obesity': 'y'})
obesity_model = Prophet(interval_width=0.95)
obesity_model.fit(obesity_f)

hypertension_f = hypertension_f.rename(columns={'date': 'ds', 'hypertension': 'y'})
hypertension_model = Prophet(interval_width=0.95)
hypertension_model.fit(hypertension_f)

vulvovaginitis_f = vulvovaginitis_f.rename(columns={'date': 'ds', 'vulvovaginitis': 'y'})
vulvovaginitis_model = Prophet(interval_width=0.95)
vulvovaginitis_model.fit(vulvovaginitis_f)

#Forecasting from 2020 to 2023 for metabolic syndrome with FB Prophet Algorithm
diabetes_forecast = diabetes_model.make_future_dataframe(periods=48, freq='MS')
diabetes_forecast = diabetes_model.predict(diabetes_forecast)

obesity_forecast = obesity_model.make_future_dataframe(periods=48, freq='MS')
obesity_forecast = obesity_model.predict(obesity_forecast)

hypertension_forecast = hypertension_model.make_future_dataframe(periods=48, freq='MS')
hypertension_forecast = hypertension_model.predict(hypertension_forecast)

vulvovaginitis_forecast = vulvovaginitis_model.make_future_dataframe(periods=48, freq='MS')
vulvovaginitis_forecast = vulvovaginitis_model.predict(vulvovaginitis_forecast)

plt.figure(figsize=(10, 7))
plt.plot(diabetes_forecast['ds'], diabetes_forecast['trend'],'g',label = 'diabetes trend' )
plt.plot(obesity_forecast['ds'], obesity_forecast['trend'],'orange',label = 'obesity trend')
plt.plot(hypertension_forecast['ds'], hypertension_forecast['trend'],'red',label = 'hypertension trend')
plt.plot(vulvovaginitis_forecast['ds'], vulvovaginitis_forecast['trend'],'purple',label = 'vulvovaginitis trend')
plt.legend(); plt.xlabel('Date'); plt.ylabel('Incidence')
plt.title('Metabolic Syndrome Diseases Trend');

"""As was mention before, the trend of the four conditions is to grow up. It seems like linear growth, so they are increasing over time since this is the trend and diabetes and hypertension are incurables implies that the number of cases is rising quickly, generating million of sick. Obesity needs a solid effort to cure. It requires changes in eating habits and increased physical activity[7]. For obesity and vulvovaginitis, from 2016 to 2017, an artificial effect seems to affect the plot, even though the growth behavior. The trend´s difference in the growth rate from 20,000 per month in the first year to 2,500 in the following years is impossible. It can occur when the information was retrieved and change the threshold to consider obesity or become a public health issue after 2017, increasing the efforts to detect obese people.

##Evaluation
Two parameters apply to evaluate the model. The first parameter is to compare the plot from the predictive values for each disease with the accurate data. For the second parameter, some metrics, such as Mean Square Error(MSE) and Mean Absolute Error (MAE), are estimated with ten-fold cross-validation.
"""

plt.figure(figsize=(10, 7))
plt.plot(diabetes_forecast['ds'], diabetes_forecast['yhat'],label = 'diabetes_forcast');
plt.plot(diabetes_f['ds'], diabetes_f['y'], label = 'diabetes');
plt.legend(); plt.xlabel('Date'); plt.ylabel('Incidence');
plt.title('Forecasting vs. Real data for diabetes')

plt.figure(figsize=(10, 7))
plt.plot(obesity_forecast['ds'], obesity_forecast['yhat'],label = 'obesity_forcast');
plt.plot(obesity_f['ds'], obesity_f['y'], label = 'obesity');
plt.legend(); plt.xlabel('Date'); plt.ylabel('Incidence');
plt.title('Forecasting vs. Real data for obesity')

plt.figure(figsize=(10, 7))
plt.plot(hypertension_forecast['ds'], hypertension_forecast['yhat'],label = 'hypertension_forcast');
plt.plot(hypertension_f['ds'], hypertension_f['y'], label = 'hypertension');
plt.legend(); plt.xlabel('Date'); plt.ylabel('Incidence');
plt.title('Forecasting vs. Real data for hypertension')

plt.figure(figsize=(10, 7))
plt.plot(vulvovaginitis_forecast['ds'], vulvovaginitis_forecast['yhat'],label = 'vulvovaginitis_forcast');
plt.plot(vulvovaginitis_f['ds'], vulvovaginitis_f['y'], label = 'vulvovaginitis');
plt.legend(); plt.xlabel('Date'); plt.ylabel('Incidence');
plt.title('Forecasting vs. Real data for vulvovaginitis')

#Estimate Metrics to evaluate the model
df_cvd = cross_validation(diabetes_model, initial='730 days', period='180 days', horizon = '365 days')
df_pd = performance_metrics(df_cvd)
print(df_pd.tail())

df_cvo = cross_validation(obesity_model, initial='730 days', period='180 days', horizon = '365 days')
df_po = performance_metrics(df_cvo)
print(df_po.tail())

df_cvh = cross_validation(hypertension_model, initial='730 days', period='180 days', horizon = '365 days')
df_ph = performance_metrics(df_cvh)
print(df_ph.tail())

df_cvv = cross_validation(vulvovaginitis_model, initial='730 days', period='180 days', horizon = '365 days')
df_pv = performance_metrics(df_cvv)
df_pv.tail()

"""From the four plots comparing from 2016 to 2019, accurate data (purple line) with predictive data (blue line), as mentioned before, is inaccurate for the last months since the higher peak take as residual should be part of seasonality. This inaccuracy reflects the high values achieved in the metrics. Ten-fold Cross-validation was performed to estimate them with a horizon of 365 years and training of 730 days. The inaccuracy is seen when forecasting 362 days is the best one, but increases the error when the prediction is for 365 days. The MSE has high values since the counts are absolute incidences per year, and their values are around the millions, but in the case of the MAPE reflects a good model for forecasting achieving an error of less than ten percent.

##Deployment
"""

plt.figure(figsize=(10, 7))
plt.plot(diabetes_forecast['ds'], diabetes_forecast['yhat'], 'b',label = 'diabetes')
plt.plot(obesity_forecast['ds'], obesity_forecast['yhat'], 'r', label = 'obesity')
plt.plot(hypertension_forecast['ds'], hypertension_forecast['yhat'], 'skyblue',label = 'hypertension')
plt.plot(vulvovaginitis_forecast['ds'], vulvovaginitis_forecast['yhat'], 'pink', label = 'vulvovaginitis')
plt.legend(); plt.xlabel('Date'); plt.ylabel('Incidence')
plt.title('Forecasting Metabolic Sydrome Estimation');

"""The figure above is the plot of four forecastings merged, and it seems that the trend is similar to increase constantly. The seasonality, as was mention before, is uniform, with the smoothed peaks in January representing a good prediction of the future besides the changes with the Covid-19 pandemia and new policies of the Mexican government. According to the Mexican government, metabolic syndrome is the seven to the ten causes of morbidity in 2019 but one of the first places in mortality [8]. That is why other people try to do similar work with available data. 


##Related Work
Soto-Estrada, J. [9] presents an epidemiological overview of Mexico, analyzing the leading causes of morbidity and mortality. Both models agree that infections are the prevalent cause of morbidity in Mexico and require continuing to control them. Likewise, create new strategies to reduce incidence in the non-infectious diseases that are becoming the predominant causes of death in Mexico. Unfortunately, models can not be compared because Soto-Estrada, J. does not show forecasting and validation of his model.

Gutiérrez-Solis, A. L. et al. [10] retrieved 15 articles in a systematic review, and all of them declare that metabolic syndrome in Mexico has a high prevalence. They recommend that Mexico urgent need to control and prevent metabolic syndrome and its complications. Since it is a review, there is not a model of comparison. Still, the conclusion is similar to the purpose of this forecasting: preventent the metabolic syndrome in the early stages when it is cheaper for the government and the Mexican families.

Rivas-Gomez, B., et al. [11] performed exploratory analysis for dyslipidemia that cause obesity and suggest that dyslipidemia has a notable role in decreasing the number of preventable deaths caused by non-communicable diseases. Moreover, the forecasting establishes the same position since obesity has a greater incidence, and its growth seems to precede the other two comorbidities and boost the fourth one.

Bello-Chavolla, O. Y., et al. [12] study the National Health Survey in Mexico classifing their results according to the age and suggest stratified according etnicies, create public electronic health records to analize more information and not only prevalences with out features of the patients.They also mention that the Mexican government has implemented several initiatives to reduce the population's exposure to calorie-dense products. These include taxes and regulation of the media. The impact of the previous interventions was being evaluated at their moment. Now the trend continues to grow to evidence that they were ineffective.

##Conclusions
The forecasting of relevant morbidities in Mexico is accurate applying time series analysis. The estimation will be helpful for the government to create policies for the country taking care of their population. Infectious diseases are the most common cause of morbidity plot in the clusters, so they required a plan to control them in the same way as now or even better. 

Since Metabolic Syndrome conditions are the seven to the ten causes of morbidity in Mexico, and they are incurable but preventable. Therefore, they required the creation of new policies to reduce incidences. According to Forbes Mexico [13] and citing the country's government, the last one is the latest labeling that in five years reduce 13 million obesity cases representing 1,800 million pesos in savings of the public health budget.

 These trials represent the future work analyzing the accurate data from these new years and the forecasting done with the Facebook Prophet, demonstrating their efficiency that has not been seen for the previous policies since the trend continues to grow.  In the past, incidence trends did not change because they only are achieved if the people learn how to take care of their health and change their lifestyle style, including physical activity and healty feed habits.  

####Future Work
The data available is to 2019, so the future work will be to deal with the change in actual data for 2020 and 2021 and update the forecasting. It will have two causes of noise, one of them negatively and hopefully the other positively. The first one is the pandemic. Since most people stay at home, the doctor does not focus on the chronic conditions reducing the incidence count. But, on the other hand, patients do not take care to be over control, eat more to stay at home, and eliminate the possibility of training in gyms and public gardens, raising the number of obese, diabetics, and hypertensive. The second is the original cause, the people who have worse eating habits combined with low or null training, and in an attempt to reduce the trends of the syndrome and change these habits, the government generates health policies. The last try is the new labeling of product which need to say if they are excessive in a specific nutrient. The leading labels are excess sugar or fat, high levels of calories, and surfeit of salt.

##References
[1] F. Provost and T. Fawcett, Data science for business: what you need toknow about data mining and data-analytic thinking. O’Reilly, 2013.

[2] https://www.oecd.org/centrodemexico/medios/Gasto%20P%C3%BAblico%20Social%20OCDE.pdf

[3] http://www.conamed.gob.mx/gobmx/boletin/pdf/boletin19/financiamiento_salud.pdf

[4] http://www.diputados.gob.mx/sedia/sia/se/SAE-ISS-12-20.pdf

[5] https://www.gob.mx/salud/acciones-y-programas/direccion-general-de-epidemiologia-boletin-epidemiologico#:~:text=El%20Bolet%C3%ADnEpidemiol%C3%B3gico%20Sistema%20Nacional%20de,la%20Direcci%C3%B3n%20General%20de%20Epidemiolog%C3%ADa.

[6] Ventolini, G., Khandelwal, N., Hutton, K., Lugo, J., Gygax, S. E., & Schlabritz-Loutsevitch, N. (2017). Obesity and recurrent vulvovaginal bacterial infections in women of reproductive age. Postgraduate medical journal, 93(1099), 297. https://doi.org/10.1136/postgradmedj-2016-134638

[7] https://www.mayoclinic.org/diseases-conditions/obesity/diagnosis-treatment/drc-20375749

[8] https://epidemiologia.salud.gob.mx/anuario/html/anuarios.html

[9] Soto-Estrada, Guadalupe, Moreno-Altamirano, Laura, & Pahua Díaz, Daniel. (2016). Panorama epidemiológico de México, principales causas de morbilidad y mortalidad. Revista de la Facultad de Medicina (México), 59(6), 8-22. Recuperado en 02 de junio de 2021, de http://www.scielo.org.mx/scielo.php?script=sci_arttext&pid=S0026-17422016000600008&lng=es&tlng=es.

[10] Gutiérrez-Solis, A. L., Datta Banik, S., & Méndez-González, R. M. (2018). Prevalence of Metabolic Syndrome in Mexico: A Systematic Review and Meta-Analysis. Metabolic syndrome and related disorders, 16(8), 395–405. https://doi.org/10.1089/met.2017.0157

[11] Rivas-Gomez, B., Almeda-Valdés, P., Tussié-Luna, M. T., & Aguilar-Salinas, C. A. (2018). DYSLIPIDEMIA IN MEXICO, A CALL FOR ACTION. Revista de investigacion clinica; organo del Hospital de Enfermedades de la Nutricion, 70(5), 211–216. https://doi.org/10.24875/RIC.18002573

[12] Bello-Chavolla, O. Y., Rojas-Martinez, R., Aguilar-Salinas, C. A., & Hernández-Avila, M. (2017). Epidemiology of diabetes mellitus in Mexico. Nutrition reviews, 75(suppl 1), 4–12. https://doi.org/10.1093/nutrit/nuw030

[13] https://www.forbes.com.mx/etiquetado-reduciria-en-cinco-anos-1-3-millones-de-casos-de-obesidad-en-mexico/?utm_source=nora-push&utm_medium=push-notifications&utm_campaign=new-nora-push
"""